//
// UsersAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire
import RxSwift



open class UsersAPI: APIBase {
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func authenticatedUserGet(completion: @escaping ((_ data: User?,_ error: Error?) -> Void)) {
        authenticatedUserGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }

    /**

     - returns: Observable<User>
     */
    open class func authenticatedUserGet() -> Observable<User> {
        return Observable.create { observer -> Disposable in
            authenticatedUserGet() { data, error in
                if let error = error {
                    observer.on(.error(error as Error))
                } else {
                    observer.on(.next(data!))
                }
                observer.on(.completed)
            }
            return Disposables.create()
        }
    }

    /**
     - GET /authenticated_user
     - examples: [{example={
  "id" : "aeiou",
  "items_count" : 1,
  "followees_count" : 0,
  "description" : "aeiou",
  "name" : "aeiou",
  "website_url" : "aeiou",
  "profile_image_url" : "aeiou",
  "followers_count" : 6
}, contentType=application/json}]

     - returns: RequestBuilder<User> 
     */
    open class func authenticatedUserGetWithRequestBuilder() -> RequestBuilder<User> {
        let path = "/authenticated_user"
        let URLString = CHQiitaApiClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<User>.Type = CHQiitaApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
